services:

  rabbitmq:
    image: rabbitmq:3.10.7-management
    hostname: rabbitmq
    restart: always
    environment:
      - RABBITMQ_DEFAULT_USER=guest
      - RABBITMQ_DEFAULT_PASS=
    ports:
      - "15672:15672"
      - "5672:5672"  
      
  cache:
    image: redis:7.0.4
    restart: always
    volumes:
      - ./data/cache:/data
    depends_on:
      - rabbitmq

  db:
    image: postgres:14.2
    restart: always
    volumes:
      - ./data/db:/var/lib/postgresql/data
    environment:
      - POSTGRES_DB=postgres
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      
  web:
    build: .
    command: ["./wait-for-it.sh", "db:5432", "--",
              "uwsgi", "--ini", "/code/config/uwsgi/uwsgi.ini"]
    restart: always
    volumes:
      - .:/code
    environment:
      - DJANGO_SETTINGS_MODULE=bunin_science_band.settings.prod
      - POSTGRES_DB=postgres
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
    depends_on:
      - db
      - cache

  nginx:
    image: nginx:1.23.1
    restart: always
    volumes:
      - ./config/nginx:/etc/nginx/templates
      - .:/code
    ports:
      - "80:80"
      
  celery:
    build: .
    container_name: 'app_celery'
    command: bash -c "cd bunin_science_band && celery -A bunin_science_band worker -l info -P eventlet"
    restart: always
    volumes:
      - .:/code
    depends_on:
      - web
      - cache
      - rabbitmq